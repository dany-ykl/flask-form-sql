import os
import psycopg2

conn = psycopg2.connect(
        host="localhost",
        database="interview",
        user="postgres",
        password=os.environ.get('PASSWORD'))

cur = conn.cursor()

cur.execute('create table auth_type\
(\
    guid      uuid        not null\
        constraint pk_auth_type\
            primary key,\
    enumname  varchar(100),\
    enumorder numeric(10) not null\
);')

cur.execute('alter table auth_type\
    owner to postgres;')

cur.execute("insert into auth_type (guid, enumname, enumorder) values (uuid_in(md5(random()::text || clock_timestamp()::text)::cstring),'NoAuth',1);\
insert into auth_type (guid, enumname, enumorder) values (uuid_in(md5(random()::text || clock_timestamp()::text)::cstring),'ApiKey',2);\
insert into auth_type (guid, enumname, enumorder) values (uuid_in(md5(random()::text || clock_timestamp()::text)::cstring),'BearerToken',3);\
insert into auth_type (guid, enumname, enumorder) values (uuid_in(md5(random()::text || clock_timestamp()::text)::cstring),'BasicAuth',4); \
")

cur.execute("create table datasources\
(\
    guid                 uuid not null\
        constraint pk_datasources\
            primary key,\
    code                 integer generated by default as identity,\
    description          varchar(150),\
    ref_auth_type        uuid not null\
        constraint datasources_ref_auth_type_fkey\
            references auth_type,\
    httpaddress          varchar(150),\
    apibaseurl           varchar(150),\
    apischemeurl         varchar(150),\
    authorizationjson    varchar(150),\
    autorizationlogin    varchar(150),\
    autorizationpassword varchar(150),\
    autorizationtoken    varchar(150),\
    marked               boolean\
);")

cur.execute('alter table datasources\
    owner to postgres;')

conn.commit()

cur.close()
conn.close()